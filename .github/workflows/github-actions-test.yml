# This is a basic workflow to help you get started with Actions

name: Github Actions Test

env:
  dotnetBuildConfiguration: 'Release'
  dotnetVerbosity: 'Detailed'
  date: Sys.Date()

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  Build:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macOs-latest, ubuntu-latest]
         
        
    env:
       pathToBuildProjects: '**/**/*.*sproj'
       pathToTestProjects: '**/test/**/*.Test.*sproj'
       pathToPackProjects: '**/src/**/*.*sproj'
       pathToNugetPackages: '**/*.nupkg'
       if: ${{ matrix.os == 'windows-latest' }}
       artifactName: 'nuget-windows'       

    #   sourceRepositoryBranch: ${{ Build.SourceBranchName }}
     #  sourceRepositoryCommit: ${{ Build.SourceVersion }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
                 
      - name: Dotnet restore
        run: dotnet restore
      
      - name: Dotnet build
        run: dotnet build --configuration Release --no-restore
      
      - name: Test
        run: dotnet test --no-restore --verbosity normal

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: 
          echo ${{ env.greeting }} he
          echo $greeting"/fh"
        env:
          greeting: 'Hello'
        

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build, ${{ env.arti }} ${{ env.date }}
          echo custom pack ${{ env.pathToPackProjects }} --output $Build.ArtifactStagingDirectory"/ci" --configuration ${{ env.dotnetBuildConfiguration }} --verbosity ${{ env.dotnetVerbosity }} /p:Configuration=${{ env.dotnetBuildConfiguration }} /p:RepositoryBranch=$Build.SourceBranchName /p:RepositoryCommit=${{ env.sourceRepositoryCommit }} /p:VersionSuffix=ci-$Build.BuildNumber


